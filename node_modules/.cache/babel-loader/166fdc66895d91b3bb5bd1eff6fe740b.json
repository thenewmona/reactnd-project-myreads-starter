{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\thene\\\\Google Drive\\\\GWG phase 2\\\\GWGprojects\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\thene\\\\Google Drive\\\\GWG phase 2\\\\GWGprojects\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\thene\\\\Google Drive\\\\GWG phase 2\\\\GWGprojects\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\thene\\\\Google Drive\\\\GWG phase 2\\\\GWGprojects\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\thene\\\\Google Drive\\\\GWG phase 2\\\\GWGprojects\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\thene\\\\Google Drive\\\\GWG phase 2\\\\GWGprojects\\\\reactnd-project-myreads-starter\\\\src\\\\App.js\";\n// import * as BooksAPI from './BooksAPI'\nimport React from 'react';\nimport * as BooksAPI from './BooksAPI';\nimport './App.css';\nimport { Route } from 'react-router-dom';\nimport MainPage from './component/mainpage';\nimport SearchPage from './component/searchpage'; //?bookshelf.js and books.js not sure if i want to create 3 different components want to read, read, currently reading\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: []\n    };\n\n    _this.updateBookshelf = function (book, shelf) {\n      BooksAPI.update(book, shelf).then(function (response) {\n        book.shelf = shelf;\n\n        _this.setState(function (state) {\n          return {\n            books: state.books.filter(function (Book) {\n              return Book.id !== book.id;\n            }).concat(book)\n          };\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      BooksAPI.getAll().then(function (books) {\n        _this2.setState({\n          books: books\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(MainPage, {\n            books: _this3.state.books,\n            updateBookshelf: _this3.updateBookshelf,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/search\",\n        render: function render() {\n          return React.createElement(SearchPage, {\n            books: _this3.state.books,\n            updateBookshelf: _this3.updateBookshelf,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\thene\\Google Drive\\GWG phase 2\\GWGprojects\\reactnd-project-myreads-starter\\src\\App.js"],"names":["React","BooksAPI","Route","MainPage","SearchPage","App","state","books","updateBookshelf","book","shelf","update","then","response","setState","filter","Book","id","concat","getAll","Component"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,OAAO,WAAP;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,UAAP,MAAuB,wBAAvB,C,CAEA;;IAEMC,G;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AAACC,MAAAA,KAAK,EAAC;AAAP,K;;UASRC,e,GAAkB,UAACC,IAAD,EAAMC,KAAN,EAAgB;AAChCT,MAAAA,QAAQ,CAACU,MAAT,CAAgBF,IAAhB,EAAqBC,KAArB,EACCE,IADD,CACM,UAAAC,QAAQ,EAAI;AAChBJ,QAAAA,IAAI,CAACC,KAAL,GAAWA,KAAX;;AACA,cAAKI,QAAL,CAAc,UAAAR,KAAK;AAAA,iBAAI;AACrBC,YAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,CAAYQ,MAAZ,CAAmB,UAAAC,IAAI;AAAA,qBAAIA,IAAI,CAACC,EAAL,KAAYR,IAAI,CAACQ,EAArB;AAAA,aAAvB,EAAgDC,MAAhD,CAAuDT,IAAvD;AADc,WAAJ;AAAA,SAAnB;AAGD,OAND;AAOD,K;;;;;;;wCAfmB;AAAA;;AAClBR,MAAAA,QAAQ,CAACkB,MAAT,GACCP,IADD,CACM,UAAAL,KAAK,EAAI;AACb,QAAA,MAAI,CAACO,QAAL,CAAc;AAACP,UAAAA,KAAK,EAALA;AAAD,SAAd;AACD,OAHD;AAID;;;6BAYQ;AAAA;;AACR,aACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,MAAM,EAAI;AAAA,iBAC9B,oBAAC,QAAD;AACE,YAAA,KAAK,EAAG,MAAI,CAACD,KAAL,CAAWC,KADrB;AAED,YAAA,eAAe,EAAG,MAAI,CAACC,eAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD8B;AAAA,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,SAAlB;AAA4B,QAAA,MAAM,EAAG;AAAA,iBACnC,oBAAC,UAAD;AACE,YAAA,KAAK,EAAG,MAAI,CAACF,KAAL,CAAWC,KADrB;AAED,YAAA,eAAe,EAAG,MAAI,CAACC,eAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADmC;AAAA,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADH;AAgBA;;;;EAtCeR,KAAK,CAACoB,S;;AAyCxB,eAAef,GAAf","sourcesContent":["// import * as BooksAPI from './BooksAPI'\r\nimport React from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\nimport {Route} from 'react-router-dom'\r\nimport MainPage from './component/mainpage';\r\nimport SearchPage from './component/searchpage';\r\n\r\n//?bookshelf.js and books.js not sure if i want to create 3 different components want to read, read, currently reading\r\n\r\nclass App extends React.Component { \r\n  \r\n  state = {books:[]} \r\n\r\n  componentDidMount() {\r\n    BooksAPI.getAll()\r\n    .then(books => {\r\n      this.setState({books});\r\n    })\r\n  }\r\n\r\n  updateBookshelf = (book,shelf) => {\r\n    BooksAPI.update(book,shelf)\r\n    .then(response => {\r\n      book.shelf=shelf;\r\n      this.setState(state =>({\r\n        books: state.books.filter(Book => Book.id !== book.id).concat(book)\r\n      }));\r\n    });\r\n  }\r\n\r\n  render() {\r\n   return (\r\n      <div>\r\n        <Route exact path=\"/\" render = {() => (\r\n          <MainPage\r\n            books= {this.state.books} \r\n        \tupdateBookshelf= {this.updateBookshelf}\r\n          />\r\n        )}/>\r\n        <Route exact path=\"/search\" render= {() => (\r\n          <SearchPage\r\n            books= {this.state.books} \r\n        \tupdateBookshelf= {this.updateBookshelf}\r\n          />\r\n        )}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}